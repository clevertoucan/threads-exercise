Here are our results for computing the maximum value and the sum with increasing 
numbers of threads and data sets:

Format will be as follows:

           # of Threads
_________|_________________
  Size of|
Data Set |
         |
         
         
     Max (in seconds)
________|_1__|__5__|__10__|
    1000|.0001|.0002|.0004|
  100000|.001 |.0019|.0015|

     Sum (in seconds)
________|_1___|__5___|__10_|
    1000|.0001|.0002 |.0004|
  100000|.0016|.0015 |.0016|
  
  Based on this data, we realize that sometimes having more threads does not always make something more efficient. If one has a 
  large amount of data to make calculations for, generally more threads will aid in improving the processign speed. However, 
  after a certain point, the rate of creating threads to perform sub tasks slows the program down as it would just be faster to perform 
  the operation with fewer threads. For example, if one had to add together 10 terms, and that person had a thread for each term,
  compilation time for this program will be noticeably longer than just using one thread to add all the terms together. So, although
  threads can be used to improve a program's running speed, they are not always more effective at running the program. 
